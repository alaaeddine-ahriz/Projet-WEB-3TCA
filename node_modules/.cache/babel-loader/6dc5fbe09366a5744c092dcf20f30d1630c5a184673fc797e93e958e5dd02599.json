{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Nicolas Lepotier\\\\Music\\\\weather_webapp\\\\src\\\\Components\\\\WeatherApp\\\\MapComponent.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { GoogleMap, useLoadScript, Marker } from \"@react-google-maps/api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst libraries = [\"places\"];\nconst mapContainerStyle = {\n  width: \"100%\",\n  // Fill the width of the parent container\n  height: \"100%\" // Fill the height of the parent container\n};\nconst mapStyles = [{\n  featureType: \"all\",\n  elementType: \"labels\",\n  stylers: [{\n    visibility: \"off\"\n  } // Hides all labels\n  ]\n}, {\n  featureType: \"locality\",\n  // Specifically targeting localities, which includes cities\n  elementType: \"labels\",\n  stylers: [{\n    visibility: \"on\"\n  } // Makes sure the names of the cities are visible\n  ]\n}, {\n  featureType: \"poi\",\n  // Points of interest\n  elementType: \"labels\",\n  // Targeting labels\n  stylers: [{\n    visibility: \"off\"\n  } // Hide labels for all points of interest\n  ]\n}\n// Add more specific styles as needed\n];\nexport default MapComponent;\nfunction MapComponent({\n  center\n}) {\n  _s();\n  const [clickPosition, setClickPosition] = useState(null);\n  const [cityName, setCityName] = useState(\"\");\n  const {\n    isLoaded,\n    loadError\n  } = useLoadScript({\n    googleMapsApiKey: \"AIzaSyAW0-OQUNUuQHQ-TvSuo4v4GjRKmHE1eps\",\n    libraries\n  });\n  if (loadError) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Error loading maps\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 12\n    }, this);\n  }\n  if (!isLoaded) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading maps\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 12\n    }, this);\n  }\n  const handleClick = async event => {\n    const lat = event.latLng.lat();\n    const lng = event.latLng.lng();\n    setClickPosition({\n      lat,\n      lng\n    });\n    try {\n      const response = await fetch(`https://maps.googleapis.com/maps/api/geocode/json?latlng=${lat},${lng}&key=AIzaSyAW0-OQUNUuQHQ-TvSuo4v4GjRKmHE1eps`);\n      const data = await response.json();\n      if (data.results && data.results[0]) {\n        const city = data.results[0].address_components.find(component => component.types.includes(\"locality\") || component.types.includes(\"administrative_area_level_1\"));\n        if (city) {\n          setCityName(city.long_name);\n          console.log(\"Vous avez cliqué sur:\", city.long_name);\n        }\n      }\n    } catch (error) {\n      console.error(\"Error fetching city name:\", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"mapContainer\",\n    children: /*#__PURE__*/_jsxDEV(GoogleMap, {\n      mapContainerStyle: mapContainerStyle,\n      zoom: 12,\n      center: center,\n      onClick: handleClick,\n      mapTypeId: \"terrain\",\n      options: {\n        styles: mapStyles,\n        streetViewControl: true,\n        mapTypeControl: false\n        // Any other map options you want to include\n      },\n      children: [clickPosition && /*#__PURE__*/_jsxDEV(Marker, {\n        position: {\n          lat: clickPosition.lat,\n          lng: clickPosition.lng\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Marker, {\n        position: center\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 5\n  }, this);\n}\n_s(MapComponent, \"Kg4EHMirPnzPv36wKaA318HOxLw=\", false, function () {\n  return [useLoadScript];\n});\n_c = MapComponent;\nvar _c;\n$RefreshReg$(_c, \"MapComponent\");","map":{"version":3,"names":["React","useState","GoogleMap","useLoadScript","Marker","jsxDEV","_jsxDEV","libraries","mapContainerStyle","width","height","mapStyles","featureType","elementType","stylers","visibility","MapComponent","center","_s","clickPosition","setClickPosition","cityName","setCityName","isLoaded","loadError","googleMapsApiKey","children","fileName","_jsxFileName","lineNumber","columnNumber","handleClick","event","lat","latLng","lng","response","fetch","data","json","results","city","address_components","find","component","types","includes","long_name","console","log","error","className","zoom","onClick","mapTypeId","options","styles","streetViewControl","mapTypeControl","position","_c","$RefreshReg$"],"sources":["C:/Users/Nicolas Lepotier/Music/weather_webapp/src/Components/WeatherApp/MapComponent.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { GoogleMap, useLoadScript, Marker } from \"@react-google-maps/api\";\r\n\r\nconst libraries = [\"places\"];\r\nconst mapContainerStyle = {\r\n  width: \"100%\", // Fill the width of the parent container\r\n  height: \"100%\", // Fill the height of the parent container\r\n};\r\n\r\nconst mapStyles = [\r\n  {\r\n    featureType: \"all\",\r\n    elementType: \"labels\",\r\n    stylers: [\r\n      { visibility: \"off\" }, // Hides all labels\r\n    ],\r\n  },\r\n  {\r\n    featureType: \"locality\", // Specifically targeting localities, which includes cities\r\n    elementType: \"labels\",\r\n    stylers: [\r\n      { visibility: \"on\" }, // Makes sure the names of the cities are visible\r\n    ],\r\n  },\r\n  {\r\n    featureType: \"poi\", // Points of interest\r\n    elementType: \"labels\", // Targeting labels\r\n    stylers: [\r\n      { visibility: \"off\" }, // Hide labels for all points of interest\r\n    ],\r\n  },\r\n  // Add more specific styles as needed\r\n];\r\n\r\nexport default MapComponent;\r\n\r\nfunction MapComponent({ center }) {\r\n  const [clickPosition, setClickPosition] = useState(null);\r\n  const [cityName, setCityName] = useState(\"\");\r\n\r\n  const { isLoaded, loadError } = useLoadScript({\r\n    googleMapsApiKey: \"AIzaSyAW0-OQUNUuQHQ-TvSuo4v4GjRKmHE1eps\",\r\n    libraries,\r\n  });\r\n\r\n  if (loadError) {\r\n    return <div>Error loading maps</div>;\r\n  }\r\n\r\n  if (!isLoaded) {\r\n    return <div>Loading maps</div>;\r\n  }\r\n\r\n  const handleClick = async (event) => {\r\n    const lat = event.latLng.lat();\r\n    const lng = event.latLng.lng();\r\n    setClickPosition({ lat, lng });\r\n\r\n    try {\r\n      const response = await fetch(\r\n        `https://maps.googleapis.com/maps/api/geocode/json?latlng=${lat},${lng}&key=AIzaSyAW0-OQUNUuQHQ-TvSuo4v4GjRKmHE1eps`,\r\n      );\r\n      const data = await response.json();\r\n      if (data.results && data.results[0]) {\r\n        const city = data.results[0].address_components.find(\r\n          (component) =>\r\n            component.types.includes(\"locality\") ||\r\n            component.types.includes(\"administrative_area_level_1\"),\r\n        );\r\n        if (city) {\r\n          setCityName(city.long_name);\r\n          console.log(\"Vous avez cliqué sur:\", city.long_name);\r\n        }\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error fetching city name:\", error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"mapContainer\">\r\n      <GoogleMap\r\n        mapContainerStyle={mapContainerStyle}\r\n        zoom={12}\r\n        center={center}\r\n        onClick={handleClick}\r\n        mapTypeId=\"terrain\"\r\n        options={{\r\n          styles: mapStyles,\r\n          streetViewControl: true,\r\n          mapTypeControl: false,\r\n          // Any other map options you want to include\r\n        }}\r\n      >\r\n        {clickPosition && (\r\n          <Marker\r\n            position={{ lat: clickPosition.lat, lng: clickPosition.lng }}\r\n          />\r\n        )}\r\n        <Marker position={center} />\r\n      </GoogleMap>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,SAAS,EAAEC,aAAa,EAAEC,MAAM,QAAQ,wBAAwB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1E,MAAMC,SAAS,GAAG,CAAC,QAAQ,CAAC;AAC5B,MAAMC,iBAAiB,GAAG;EACxBC,KAAK,EAAE,MAAM;EAAE;EACfC,MAAM,EAAE,MAAM,CAAE;AAClB,CAAC;AAED,MAAMC,SAAS,GAAG,CAChB;EACEC,WAAW,EAAE,KAAK;EAClBC,WAAW,EAAE,QAAQ;EACrBC,OAAO,EAAE,CACP;IAAEC,UAAU,EAAE;EAAM,CAAC,CAAE;EAAA;AAE3B,CAAC,EACD;EACEH,WAAW,EAAE,UAAU;EAAE;EACzBC,WAAW,EAAE,QAAQ;EACrBC,OAAO,EAAE,CACP;IAAEC,UAAU,EAAE;EAAK,CAAC,CAAE;EAAA;AAE1B,CAAC,EACD;EACEH,WAAW,EAAE,KAAK;EAAE;EACpBC,WAAW,EAAE,QAAQ;EAAE;EACvBC,OAAO,EAAE,CACP;IAAEC,UAAU,EAAE;EAAM,CAAC,CAAE;EAAA;AAE3B;AACA;AAAA,CACD;AAED,eAAeC,YAAY;AAE3B,SAASA,YAAYA,CAAC;EAAEC;AAAO,CAAC,EAAE;EAAAC,EAAA;EAChC,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGnB,QAAQ,CAAC,IAAI,CAAC;EACxD,MAAM,CAACoB,QAAQ,EAAEC,WAAW,CAAC,GAAGrB,QAAQ,CAAC,EAAE,CAAC;EAE5C,MAAM;IAAEsB,QAAQ;IAAEC;EAAU,CAAC,GAAGrB,aAAa,CAAC;IAC5CsB,gBAAgB,EAAE,yCAAyC;IAC3DlB;EACF,CAAC,CAAC;EAEF,IAAIiB,SAAS,EAAE;IACb,oBAAOlB,OAAA;MAAAoB,QAAA,EAAK;IAAkB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EACtC;EAEA,IAAI,CAACP,QAAQ,EAAE;IACb,oBAAOjB,OAAA;MAAAoB,QAAA,EAAK;IAAY;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EAChC;EAEA,MAAMC,WAAW,GAAG,MAAOC,KAAK,IAAK;IACnC,MAAMC,GAAG,GAAGD,KAAK,CAACE,MAAM,CAACD,GAAG,CAAC,CAAC;IAC9B,MAAME,GAAG,GAAGH,KAAK,CAACE,MAAM,CAACC,GAAG,CAAC,CAAC;IAC9Bf,gBAAgB,CAAC;MAAEa,GAAG;MAAEE;IAAI,CAAC,CAAC;IAE9B,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CACzB,4DAA2DJ,GAAI,IAAGE,GAAI,8CACzE,CAAC;MACD,MAAMG,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;MAClC,IAAID,IAAI,CAACE,OAAO,IAAIF,IAAI,CAACE,OAAO,CAAC,CAAC,CAAC,EAAE;QACnC,MAAMC,IAAI,GAAGH,IAAI,CAACE,OAAO,CAAC,CAAC,CAAC,CAACE,kBAAkB,CAACC,IAAI,CACjDC,SAAS,IACRA,SAAS,CAACC,KAAK,CAACC,QAAQ,CAAC,UAAU,CAAC,IACpCF,SAAS,CAACC,KAAK,CAACC,QAAQ,CAAC,6BAA6B,CAC1D,CAAC;QACD,IAAIL,IAAI,EAAE;UACRnB,WAAW,CAACmB,IAAI,CAACM,SAAS,CAAC;UAC3BC,OAAO,CAACC,GAAG,CAAC,uBAAuB,EAAER,IAAI,CAACM,SAAS,CAAC;QACtD;MACF;IACF,CAAC,CAAC,OAAOG,KAAK,EAAE;MACdF,OAAO,CAACE,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;IACnD;EACF,CAAC;EAED,oBACE5C,OAAA;IAAK6C,SAAS,EAAC,cAAc;IAAAzB,QAAA,eAC3BpB,OAAA,CAACJ,SAAS;MACRM,iBAAiB,EAAEA,iBAAkB;MACrC4C,IAAI,EAAE,EAAG;MACTnC,MAAM,EAAEA,MAAO;MACfoC,OAAO,EAAEtB,WAAY;MACrBuB,SAAS,EAAC,SAAS;MACnBC,OAAO,EAAE;QACPC,MAAM,EAAE7C,SAAS;QACjB8C,iBAAiB,EAAE,IAAI;QACvBC,cAAc,EAAE;QAChB;MACF,CAAE;MAAAhC,QAAA,GAEDP,aAAa,iBACZb,OAAA,CAACF,MAAM;QACLuD,QAAQ,EAAE;UAAE1B,GAAG,EAAEd,aAAa,CAACc,GAAG;UAAEE,GAAG,EAAEhB,aAAa,CAACgB;QAAI;MAAE;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC9D,CACF,eACDxB,OAAA,CAACF,MAAM;QAACuD,QAAQ,EAAE1C;MAAO;QAAAU,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACnB;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACT,CAAC;AAEV;AAACZ,EAAA,CAnEQF,YAAY;EAAA,QAIab,aAAa;AAAA;AAAAyD,EAAA,GAJtC5C,YAAY;AAAA,IAAA4C,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}